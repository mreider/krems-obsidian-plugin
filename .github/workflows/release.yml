name: Create Plugin Release

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to push commits, tags, and create releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for version bumping and tagging

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your preferred Node.js version

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build # Assumes 'npm run build' compiles main.ts to main.js

      - name: Generate version string
        id: version
        run: echo "VERSION_NUMBER=0.1.${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Update manifest.json
        run: |
          jq --arg version "${{ steps.version.outputs.VERSION_NUMBER }}" '.version = $version' krems-obsidian-plugin/manifest.json > krems-obsidian-plugin/manifest.json.tmp && mv krems-obsidian-plugin/manifest.json.tmp krems-obsidian-plugin/manifest.json
          echo "Updated manifest.json with version ${{ steps.version.outputs.VERSION_NUMBER }}"
          cat krems-obsidian-plugin/manifest.json

      - name: Update versions.json
        run: |
          jq --arg version "${{ steps.version.outputs.VERSION_NUMBER }}" '. += {($version): $version}' krems-obsidian-plugin/versions.json > krems-obsidian-plugin/versions.json.tmp && mv krems-obsidian-plugin/versions.json.tmp krems-obsidian-plugin/versions.json
          # The above adds a new key-value pair. If you want to update a specific existing key (e.g., "latestVersion"):
          # jq --arg version "${{ steps.version.outputs.VERSION_NUMBER }}" '.latestVersion = $version' krems-obsidian-plugin/versions.json > krems-obsidian-plugin/versions.json.tmp && mv krems-obsidian-plugin/versions.json.tmp krems-obsidian-plugin/versions.json
          echo "Updated versions.json with version ${{ steps.version.outputs.VERSION_NUMBER }}"
          cat krems-obsidian-plugin/versions.json

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Commit updated version files
        run: |
          git add krems-obsidian-plugin/manifest.json krems-obsidian-plugin/versions.json
          # Check if there are changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Bump version to ${{ steps.version.outputs.VERSION_NUMBER }}"
          else
            echo "No version changes to commit."
          fi

      - name: Create Git tag
        run: git tag -a "v${{ steps.version.outputs.VERSION_NUMBER }}" -m "Version ${{ steps.version.outputs.VERSION_NUMBER }}"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.version.outputs.VERSION_NUMBER }}"
          release_name: "Release v${{ steps.version.outputs.VERSION_NUMBER }}"
          body: "Automated release for version ${{ steps.version.outputs.VERSION_NUMBER }}."
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./krems-obsidian-plugin/main.js
          asset_name: main.js
          asset_content_type: application/javascript

      - name: Upload Manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./krems-obsidian-plugin/manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
      
      - name: Upload Styles
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./krems-obsidian-plugin/styles.css
          asset_name: styles.css
          asset_content_type: text/css

      - name: Push changes (commit and tag)
        run: |
          git push origin HEAD # Push the commit
          git push origin "v${{ steps.version.outputs.VERSION_NUMBER }}" # Push the tag
