/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var b=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var P=(c,l)=>{for(var t in l)b(c,t,{get:l[t],enumerable:!0})},v=(c,l,t,i)=>{if(l&&typeof l=="object"||typeof l=="function")for(let r of f(l))!w.call(c,r)&&r!==t&&b(c,r,{get:()=>l[r],enumerable:!(i=E(l,r))||i.enumerable});return c};var L=c=>v(b({},"__esModule",{value:!0}),c);var x={};P(x,{default:()=>m});module.exports=L(x);var a=require("obsidian"),S={githubRepoUrl:"",localMarkdownPath:"",gitPassword:""},m=class extends a.Plugin{constructor(){super(...arguments);this.isKremsRunning=!1}async onload(){await this.loadSettings(),this.addRibbonIcon("cloud-lightning","Krems Publisher",t=>{new y(this.app,this).open()}),this.addSettingTab(new k(this.app,this)),console.log("Krems Obsidian Plugin loaded.")}onunload(){console.log("Krems Obsidian Plugin unloaded.")}async loadSettings(){this.settings=Object.assign({},S,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},y=class extends a.Modal{constructor(t,i){super(t);this.plugin=i}onOpen(){let{contentEl:t}=this;t.empty(),t.createEl("h2",{text:"Krems Publisher Actions"});let i=t.createDiv({cls:"krems-modal-section"});i.createEl("h4",{text:"1. Initialize Local Directory"}),i.createEl("p",{text:`This will clone krems-example into your specified local directory (${this.plugin.settings.localMarkdownPath||"not set"}) and set its remote to your GitHub repo.`});let r=i.createEl("button",{text:"Initialize Directory"});r.addEventListener("click",async()=>{new a.Notice("Initializing directory... (Not implemented yet)")}),(!this.plugin.settings.localMarkdownPath||!this.plugin.settings.githubRepoUrl)&&(r.disabled=!0,i.createEl("p",{text:"Please set Local Markdown Directory and GitHub Repo URL in settings.",cls:"krems-warning"}));let p=t.createDiv({cls:"krems-modal-section"});p.createEl("h4",{text:"2. Manage Local Krems Server"});let u=p.createEl("button",{text:"Start Krems Locally"}),g=p.createEl("button",{text:"Stop Krems Server"});(()=>{this.plugin.isKremsRunning?(u.setText("Krems Running"),u.disabled=!0,g.disabled=!1):(u.setText("Start Krems Locally"),u.disabled=!1,g.disabled=!0)})(),u.addEventListener("click",async()=>{new a.Notice("Starting Krems... (Not implemented yet)")}),g.addEventListener("click",async()=>{new a.Notice("Stopping Krems... (Not implemented yet)")}),this.plugin.settings.localMarkdownPath||(u.disabled=!0,g.disabled=!0,p.createEl("p",{text:"Please set Local Markdown Directory in settings.",cls:"krems-warning"}));let e=t.createDiv({cls:"krems-modal-section"});e.createEl("h4",{text:"3. Push Site to GitHub"}),e.createEl("p",{text:`This will add, commit, and push the content of '${this.plugin.settings.localMarkdownPath||"not set"}' to your GitHub repo.`});let s=e.createEl("input",{type:"text",placeholder:"Optional commit message"});s.style.width="100%",s.style.marginBottom="10px";let o=e.createEl("button",{text:"Push to GitHub"});o.addEventListener("click",async()=>{let d=s.value.trim()||"latest site version";new a.Notice(`Pushing with commit: "${d}" (Not implemented yet)`)}),(!this.plugin.settings.localMarkdownPath||!this.plugin.settings.githubRepoUrl)&&(o.disabled=!0,s.disabled=!0,e.createEl("p",{text:"Please set Local Markdown Directory and GitHub Repo URL in settings.",cls:"krems-warning"})),t.createEl("hr");let n=t.createEl("p",{cls:"krems-modal-footer"});n.setText("For help, see the "),n.createEl("a",{text:"plugin documentation",href:"https://github.com/mreider/krems-obsidian-plugin/",attr:{target:"_blank",rel:"noopener noreferrer"}}),n.appendText(".")}onClose(){let{contentEl:t}=this;t.empty()}},k=class extends a.PluginSettingTab{constructor(t,i){super(t,i);this.plugin=i}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Krems Publisher Settings"});let i=(e,s,o,n)=>{e.classList.remove("krems-input-valid","krems-input-invalid"),s.classList.remove("krems-feedback-valid","krems-feedback-invalid"),s.textContent=o,s.style.display=o?"block":"none",o&&(e.classList.add(n?"krems-input-valid":"krems-input-invalid"),s.classList.add(n?"krems-feedback-valid":"krems-feedback-invalid"))},r=new a.Setting(t).setName("GitHub Repository URL").setDesc("HTTPS URL of your GitHub repository (e.g., https://github.com/username/repo). Do not include .git at the end."),p=r.controlEl.createEl("div",{cls:"krems-setting-feedback",attr:{id:"repo-url-feedback",style:"display: none; margin-top: 5px;"}});r.addText(e=>{e.setPlaceholder("https://github.com/username/repo").setValue(this.plugin.settings.githubRepoUrl).onChange(async s=>{this.plugin.settings.githubRepoUrl=s.trim(),await this.plugin.saveSettings()}),e.inputEl.addEventListener("focusout",async()=>{let s=this.plugin.settings.githubRepoUrl,o=!0,n="";if(!s){i(e.inputEl,p,"",!0);return}if(!s.startsWith("https://github.com/"))o=!1,n="URL must start with https://github.com/";else if(s.endsWith(".git"))o=!1,n="URL should not end with .git";else{let d=s.substring(19).split("/");(d.length<2||!d[0]||!d[1])&&(o=!1,n="Invalid GitHub repository URL format.")}o&&n===""&&(n="URL format is valid."),i(e.inputEl,p,n,o)}),this.plugin.settings.githubRepoUrl&&e.inputEl.dispatchEvent(new Event("focusout"))});let u=new a.Setting(t).setName("Local Markdown Directory").setDesc("Path to the directory in your vault for your Krems site (e.g., MyKremsSite)."),g=u.controlEl.createEl("div",{cls:"krems-setting-feedback",attr:{id:"local-path-feedback",style:"display: none; margin-top: 5px;"}});u.addText(e=>{e.setPlaceholder("e.g., MyKremsSite or path/to/site").setValue(this.plugin.settings.localMarkdownPath).onChange(async s=>{this.plugin.settings.localMarkdownPath=s.trim(),await this.plugin.saveSettings()}),e.inputEl.addEventListener("focusout",async()=>{let s=this.plugin.settings.localMarkdownPath,o=!1,n="";if(!s){i(e.inputEl,g,"",!0);return}let d=this.app.vault.getAbstractFileByPath(s);d&&d instanceof a.TFolder?(o=!0,n="Directory exists."):(o=!1,n="Directory not found in the vault."),i(e.inputEl,g,n,o)}),this.plugin.settings.localMarkdownPath&&e.inputEl.dispatchEvent(new Event("focusout"))}),new a.Setting(t).setName("Git Token/Password (Optional)").setDesc("Enter your Git password or Personal Access Token (PAT) if required for push operations. PAT is recommended for security.").addText(e=>{e.inputEl.type="password",e.setPlaceholder("Enter your Git token/password").setValue(this.plugin.settings.gitPassword||"").onChange(async s=>{this.plugin.settings.gitPassword=s,await this.plugin.saveSettings()})}),t.createEl("hr");let h=t.createEl("p",{cls:"krems-settings-footer"});h.setText("For plugin instructions, troubleshooting, and more information, please visit the "),h.createEl("a",{text:"plugin documentation on GitHub",href:"https://github.com/mreider/krems-obsidian-plugin/",attr:{target:"_blank",rel:"noopener noreferrer"}}),h.setText(".")}};
